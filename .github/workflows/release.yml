name: 'C++ CI'

on:
  push

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release 1.0.${{ github.run_number }}
          draft: false
          prerelease: false

  build-linux:
    needs: release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload-release-asset.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  build-windows:
    needs: release
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with: 
          submodules: true
      - name: Setup boost-test 
        run: git clone https://github.com/microsoft/vcpkg.git
        run: .\vcpkg\bootstrap-vcpkg.bat
        run: .\vcpkg\vcpkg install boost-test:x64-windows

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}
        
      - name: Build
        run: cmake --build .
        run: cmake --build . --target test
        run: cmake --build . --target package

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Windows.exe
          asset_name: helloworld-0.0.${{ github.run_number }}-Windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable

